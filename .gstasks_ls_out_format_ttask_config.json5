{
  is_use_style: true,
  out_file: "ttask_tasks.html",
  sorting_sql: "\
select uuid, 1 as x, udf__md5(uuid) as hash \
from tasks \
order by scheduled_date desc, _last_modification_date desc \
",
  row_styling_sql: "@/Users/nailbiter/Documents/forgithub/pyassistantbot2/.gstasks_samples/row_styling.jinja.sql",
  template: '\
<html>\
  <style>\
  </styletable {\
    border: 1px solid;\
    /* outline: 0.5rem solid khaki; */\
    /* box-shadow: 0 0 0 2rem skyblue; */\
    /* border-radius: 12px; */ \
    /* font: bold 1rem sans-serif; */\
    /* margin: 2rem; */\
    /* padding: 1rem; */\
    /* outline-offset: 0.5rem; */\
\
    table-layout: fixed; width: 100%\
}\
\
\
th {\
    border: 1px solid;\
}\
\
.col0 {\
}\
\
td {\
    border: 1px solid;\
}\
\
.REGULAR {\
    background-color: brown;\
}\
>\
  <p>$row_num tasks</p>\
  ${table_html}\
</html>',
  sql_udfs_file: "gstasks_sql_uds.py",
  output_columns: [
    { column_name: "name" },
    {
      column_name: "URL",
      jinja_tpl: '{%if not utils.pd.isna(x)%}<a href="{{x}}">U</a>{%endif%}',
    },
    {
      column_name: "scheduled_date",
      jinja_tpl: "{{'' if utils.pd.isna(x) else x.strftime('%Y-%m-%d')}}",
    },
    { column_name: "status" },
    { column_name: "when" },
    {
      column_name: "due",
      jinja_tpl: "{{'' if utils.pd.isna(x) else x.strftime('%Y-%m-%d')}}",
    },
    {
      column_name: "_insertion_date",
      jinja_tpl: "{{'' if utils.pd.isna(x) else x.strftime('%Y-%m-%d %H:%M')}}",
    },
      { column_name: "tags", jinja_tpl: "{{utils.json5.loads(x)|select('ne','7cd20942-def7-41c3-9f32-b818e6781566')}}" },
    { column_name: "comment" },
    {
      column_name: "_last_modification_date",
      jinja_tpl: "{{'' if utils.pd.isna(x) else x.strftime('%Y-%m-%d %H:%M')}}",
    },
    {
      column_name: "is_engage",
      jinja_tpl: "{{r.uuid==last_engaged_task_uuid}}",
    },
    /*{
      column_name: "test",
      jinja_tpl: "{{utils.custom.ifnull(utils.custom.get_task_by_uuid(utils.custom.ifnull(r.get('label'),{}).get('test')),{}).get('name')}}",
      //jinja_tpl: "{{utils.custom.ifnull(utils.custom.get_task_by_uuid(utils.custom.ifnull(r.get('label'),{},is_loud=True).get('test')),{}).get('name')}}",
    },*/
  ],
}
